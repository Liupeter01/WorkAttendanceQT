#pragma once
#include "ui_WorkAttendanceSys.h"
#include "ui_WorkAttendanceAdmin.h"
#include <QtWidgets/QDialog>
#include"../Interface/Interface.h"

class WorkAttendanceSys : public QDialog, public Interface
{
    Q_OBJECT

public:
          WorkAttendanceSys(QWidget* parent = nullptr);
          ~WorkAttendanceSys();

private:
          /*--------------------------WorkAttendanceSys考勤系统初始化------------------------------*/
          /*------------------------------------------------------------------------------------------------------
          * @WorkAttendanceSys考勤系统按钮设定
          * @name : initButtonSetting
          * @funtion : 提供操作槽SLOT供给signal信号调用
          *------------------------------------------------------------------------------------------------------*/
          void initButtonSetting();

          /*------------------------------------------------------------------------------------------------------
          * @WorkAttendanceSys考勤系统常驻程序
          * @name : initWorkAttendanceSys
          * @funtion : 提供操作槽SLOT供给signal信号调用
          *------------------------------------------------------------------------------------------------------*/
          void initWorkAttendanceSys();

          /*------------------------------------------------------------------------------------------------------
          * @WorkAttendanceSys考勤系统初始化下拉框
          * @name :   initSysDeptComboBox
          * @funtion : 初始化下拉框用于部门的选择
          *------------------------------------------------------------------------------------------------------*/
          void initSysDeptComboBox();

          /*------------------------------------------------------------------------------------------------------
          * @WorkAttendanceSys考勤系统进度条初始化
          * @name :  initProcessBarSetting
          * @funtion : 初始化进度条的信息
          *------------------------------------------------------------------------------------------------------*/
          void initProcessBarSetting();

private slots:
          /*----------------------WorkAttendanceSys考勤系统按钮槽函数---------------------------*/
          /*------------------------------------------------------------------------------------------------------
          * 槽函数类别---关闭视频流和其他的线程
          * @name : closeVideoStream
          * @funtion : 提供操作槽SLOT供给signal信号调用
          * @Correction: 2022-8-1 可能存在有的线程卡在死循环中无法关闭的bug(现在还存在)
          *------------------------------------------------------------------------------------------------------*/
          void closeVideoStream();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---向训练线程传递信号拍照信号
           * @name : takePictureFromVideo
           * @funtion : 提供操作槽SLOT供给signal信号调用，拍照时暂停主显示线程以方便客户查看
           * @Correction : 2022-7-30 只有摁下拍摄按钮之后才可以选择图像的保存逻辑
           *                                                没有做出保存决定之前不可拍摄下一张照片
           *------------------------------------------------------------------------------------------------------*/
          void takePictureFromVideo();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---根据训练集开启人脸训练模式
           * @name : initTranningProcess
           * @funtion : 提供操作槽SLOT供给signal信号调用
           * @Correction: 2022-7-29 修复无法宽字符无法正常输入数据库的bug
           *------------------------------------------------------------------------------------------------------*/
          void initTranningProcess();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---保存当前的照片图像(仅限训练)
           * @name : savePictureForTranning
           * @funtion : 提供操作槽SLOT供给signal信号调用
           * @Correction : 2022-7-30 只有摁下拍摄按钮之后才可以选择继续拍照
           *                                                没有拍照之前不可以选择保存逻辑
           *------------------------------------------------------------------------------------------------------*/
          void savePictureForTranning();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---舍弃当前的照片图像(仅限训练)
           * @name : ignorePicture
           * @funtion : 提供操作槽SLOT供给signal信号调用
           * @Correction : 2022-7-30 只有摁下拍摄按钮之后才可以选择继续拍照
           *                                                没有拍照之前不可以选择保存逻辑
           *------------------------------------------------------------------------------------------------------*/
          void ignorePictureForTranning();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---开启人脸训练模式，从拍照线程中获取图片并加入训练集
           * @name : tranningSetInputFromVideo
           * @funtion : 提供操作槽SLOT供给signal信号调用
           * @Correction : 2022-7-30 启动训练拍照程序之后系统允许按钮的操作
           *------------------------------------------------------------------------------------------------------*/
          void tranningSetInputFromVideo();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---摁下当前开关启动用户的人脸登录系统(开始人脸识别)
           * @name : employeeAttendanceInterface
           * @funtion : 提供操作槽SLOT供给signal信号调用
           *------------------------------------------------------------------------------------------------------*/
          void employeeAttendanceInterface();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---摁下当前开关启动用户的人脸登出系统(开始人脸识别)
           * @name : employeeSignalOutInterface
           * @funtion : 提供操作槽SLOT供给signal信号调用
           *------------------------------------------------------------------------------------------------------*/
          void employeeSignalOutInterface();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---摁下当前开关向管理员账户申请注册权限
           * @name : employeeAskPremitInterface
           * @funtion : 提供操作槽SLOT供给signal信号调用
           *------------------------------------------------------------------------------------------------------*/
          void employeeAskPremitInterface();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---摁下当前开关检查注册权限
           * @name : employeeCheckPremittion
           * @funtion : 提供操作槽SLOT供给signal信号调用
           *------------------------------------------------------------------------------------------------------*/
          void employeeCheckPremittion();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---登录管理部门系统身份验证函数
           * @name : adminManagementLogin
           * @funtion : 登录管理部门的权限验证系统
           * @Correction: 2022-8-18 该函数需要设定为槽函数
           *------------------------------------------------------------------------------------------------------*/
          void adminManagementLogin();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---登录管理部门系统的UI界面
           * @name : adminManagementLogin
           * @funtion : 访问管理部门系统UI界面
           * @Correction: 2022-8-18 该函数需要设定为槽函数
           *------------------------------------------------------------------------------------------------------*/
          void adminManagementUI();

private slots:
          /*---------------------WorkAttendanceAdmin管理员系统按钮槽函数----------------------*/
          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---显示相应的统计信息
           * @name : adminManagementLogin
           * @funtion : 显示相应的统计信息打卡记录和图表显示
           *------------------------------------------------------------------------------------------------------*/
          void displayStatisticsInfo();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---显示新员工表格
           * @name : displayNewEmployeeList
           * @funtion : 显示新员工表格
           *------------------------------------------------------------------------------------------------------*/
          void displayNewEmployeeList();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---通过员工申请
           * @name : ApproveEmployee
           * @funtion : 通过员工申请
           *------------------------------------------------------------------------------------------------------*/
          void approveEmployee();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---驳回员工申请
           * @name : deniedEmployee
           * @funtion : 驳回员工申请
           *------------------------------------------------------------------------------------------------------*/
          void deniedEmployee();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---设置系统参数
           * @name : adminParamSetting
           * @funtion : 显示相应的统计信息打卡记录和图表显示
           *------------------------------------------------------------------------------------------------------*/
          void adminParamSetting();

          /*------------------------------------------------------------------------------------------------------
           * 槽函数类别---关闭WorkAttendanceAdmin系统的UI系统
           * @name : closeAdminUI
           * @funtion : 关闭WorkAttendanceAdmin系统的UI系统
           *------------------------------------------------------------------------------------------------------*/
          void closeAdminUI();

private:
          /*------------------------WorkAttendanceSys考勤系统设置函数-----------------------------*/
          /*------------------------------------------------------------------------------------------------------
           * WorkAttendanceSys信号槽的设置程序
           * @name : initSysConnectSlot
           * @funtion : 设置空间和函数的捆绑关系
           * @Correction: 2022-8-20 解决点击一次按钮同时触发两次的情况
           *------------------------------------------------------------------------------------------------------*/
          void initSysConnectSlot();

          /*------------------------------------------------------------------------------------------------------
           * 禁用训练相关的按钮程序
           * @name : disableTranningButton
           * @funtion : 设置空间和函数的捆绑关系
           *------------------------------------------------------------------------------------------------------*/
          void disableTranningButton();

          /*------------------------------------------------------------------------------------------------------
           * 删除打开普通UI
           * @name : deleteSysUi
           * @funtion : 删除打开普通UI
           *------------------------------------------------------------------------------------------------------*/
          void deleteSysUi();

private:
          /*------------------------WorkAttendanceSys考勤系统管理员系统-----------------------------*/
          /*------------------------------------------------------------------------------------------------------
           * WorkAttendanceAdmin信号槽的设置程序
           * @name :initAdminConnectSlot
           * @funtion : 关闭WorkAttendanceAdmin系统的UI系统
           * @Correction: 2022-8-20 解决点击一次按钮同时触发两次的情况
           *------------------------------------------------------------------------------------------------------*/
          void initAdminConnectSlot();

          /*------------------------------------------------------------------------------------------------------
          * @WorkAttendanceAdmin考勤系统初始化下拉框
          * @name :   initSysDeptComboBox
          * @funtion : 初始化下拉框用于部门的选择
          *------------------------------------------------------------------------------------------------------*/
          void initAdminDeptComboBox();

          /*------------------------------------------------------------------------------------------------------
          * @WorkAttendanceAdmin考勤系统初始化管理系统的参数
          * @name :    initAdminParamSetting
          * @funtion : 初始化管理系统的参数
          *------------------------------------------------------------------------------------------------------*/
          void initAdminParamSetting();

          /*------------------------------------------------------------------------------------------------------
           * 初始化ADMIN系统UI
           * @name : deleteSysUi
           * @funtion : 初始化ADMIN系统UI(或者重新分配UI)
           * @Correction: 2022-8-19 由于QDialog的重新内存分配需要重置Admin UI信号槽的设置
           *------------------------------------------------------------------------------------------------------*/
          void initAdminUi();

          /*------------------------------------------------------------------------------------------------------
           * 删除ADMIN系统UI
           * @name : deleteSysUi
           * @funtion : 删除ADMIN系统UI
           *------------------------------------------------------------------------------------------------------*/
          void deleteAdminUi();

private:
          /*------------------WorkAttendanceSys考勤系统MYSQL操作指令-------------------------*/
          std::string m_SelectDepartment = "SELECT Department FROM departmenttable";

private:
          QDateTime* m_globalTimer = nullptr;                  //全局时钟系统
          QDialog* m_qDialog = nullptr;
          DataDisplay* m_dataDisplay = nullptr;                 //DataDisplay
          std::string m_currentAdmin;                                  //当前登录的ADMIN
          Ui::WorkAttendanceSys *ui_sys = nullptr;            //人脸系统主系统
          Ui::WorkAttendanceAdmin* ui_admin = nullptr;  //人脸系统ADMIN界面
          std::vector<std::thread> m_threadPool;
};